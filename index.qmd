---
title: Software for management of knowledge organization systems
authors:
- name: Jakob Voß
  orcid: 0000-0002-7613-4123
  affiliations:
   - name: Verbundzentrale des GBV (VZG)
bibliography: references.bib
date: last-modified
---

The terminology registry **[BARTOC](https://bartoc.org/)** collects information about knowledge organization systems or terminologies of all kinds (controlled vocabularies, classifications, ontologies, semantic artifacts...). This report summarizes information about software for management of these knowledge organization systems.

## Scope

The software should be primarily for editing, viewing and/or analyzing vocabularies. Software is not listed if it only happens to make use of terminologies (for instance OpenRefine) or if it only includes a minor terminology management module (such as most database management systems).

Closed source software is only included if it is very specific to manage vocabularies

Software limited to simple terminologies for translation and glossaries are not included. This also excludes the category of software known as "terminology management" to manage a centralized repository of approved terms, definitions, and translations in an organization.

## Summary

```{python}
#| label: tbl-software
#| tbl-cap: Software comparison
from IPython.display import Markdown
from tabulate import tabulate
import pandas as pd
from urllib.parse import urlparse
from IPython.display import display, HTML
import re

def hyperlink(row):
    if pd.notna(row['url']):
        return f'<a href="{row["url"]}">{row["name"]}</a>'
    else:
        return row['name']    

def cell(value):
    if isinstance(value, bool):
        return "✓" if value else "-"
    elif isinstance(value, str) and re.match(r"^https?://",value):
        url = urlparse(value)
        host = url.hostname.split(".")[-2]
        return f'<a href="{value}">{host}</a>'
    return value # html.escape(value)

df = pd.read_json('software.json')

df["name"] = df.apply(hyperlink, axis=1)
df = df.drop(columns=["url"])
df = df.applymap(cell)
display(HTML(df.to_html(escape=False,index=False)))
```

Each software is described with the following fields:

Field | Purpose
------|--------
`name` | Name of the software
`url` | Homepage
`platform` | Operating System or similar dependency (Web application, CLI...) 
`api` | whether a web service or similar API is provided to connect to
`edit` | whether vocabularies can be modified with the software
`language` |
`license` |
`repository` | Source Code repository
`update` |

Update year has been updated manually in February 2025 by inspecting the commit log and ommitting trivial changes.

